.plot_content
  #mentions

:css
  .axis line {
    fill: none;
    stroke: #C3C3C3;
    shape-rendering: crispEdges;  }

  .x.axis path {
    display: none;
  }

  .line {
    fill: none;
    stroke: steelblue;
    stroke-width: 1.5px;
  }

:javascript
  var dataset = #{@result};
  var margin = {top: 40, right: 20, bottom: 30, left: 60},
    w = 1150 - margin.left - margin.right,
    h = 500 - margin.top - margin.bottom;

  var y = d3.scale.linear()
      .domain([0, d3.max(dataset, function(d) {return d.mentions})])
      .range([h, 0]);

  var x = d3.time.scale()
      .domain([0, dataset.length])
      .range([0, w]);

  var svg = d3.select("#mentions").append("svg")
      .attr("width", w + margin.left + margin.right)
      .attr("height", h + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .ticks(5)
      .tickSize(-w, 0, 0);

  var line = d3.svg.line()
    .x(function(d, i) { return x(i); })
    .y(function(d) { return y(d.mentions); })
    .interpolate("monotone");

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + h + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", "-3em")
      .style("text-anchor", "end")
      .text("Mentions");

  svg.append("path")
      .datum(dataset)
      .attr("class", "line")
      .attr("d", line);
